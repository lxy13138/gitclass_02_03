"""
Django settings for Django_base_t project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

# 导入操作系统的模块：使用此模块可以操作系统文件
import os

# 当前工程的根目录
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# os.path.abspath(__file__)指的是setting文件
# 套一层os.path.dirname()指的就是os.path.abspath(__file__)的上一层，套两层就是上两层，也就是Dhango_base_t
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# 作用：就是用于在工程内部构建、拼接文件路径的
# print("BASE_DIR:",BASE_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# 密钥：很长，没规律的字符串。如需加密处理，默认密钥就是这个
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's%79c3o)+r=*zcntvhzg0is9avw@=1^-x%dg(cj@!u1kn6xy84'

# 提示：部署时，一定要将DEBUG = False
# 好处：调试时精准定位错误位置和原因
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 允许访问该程序的域名存储在这里
ALLOWED_HOSTS = []


# Application definition

# 注册Django的自应用的
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # '子应用的名字',
    'users',
]

# 中间件
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 为保证非GET请求(POST, PUT, DELETE)可以正常接收，该中间件需要注释掉
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# 路由入口
ROOT_URLCONF = 'Django_base_t.urls'
# 配置模板模块的：MVT当中的T
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# WSGI协议的入口，不用手动写了
WSGI_APPLICATION = 'Django_base_t.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# 配置sql数据库的
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
# 如果使用Django开发注册和登陆
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
# 语言：默认英文
LANGUAGE_CODE = 'en-us'
# 时区
TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
# 加载静态文件的地址前缀
STATIC_URL = '/static/'
